import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Properties;
import java.util.Arrays;
class will {
fail to;
carry over;
property to;
the child;
process.Other variables( like java){
}
applications with(){
}
source code( Main.java to){
}
}
public class Main {
public static void show( String[] args) throws IOException {
boolean parent=args.length == 2;
BufferedWriter bw=new BufferedWriter(new FileWriter("testcase_" + args[0] + "_"+ (parent ? "parent" : "child")+ ".txt",false));
try {
if (parent) {
bw.write("Test mode: parent " + args[0] + "\r\n");
bw.write("Run command: " + Arrays.toString(run(args[0],false)) + "\r\n");
}
else {
bw.write("Test mode: child " + args[0] + "\r\n");
bw.write("Custom home: " + System.getenv("CUSTOM_USER_HOME") + "\r\n");
}
bw.write("System Properties:\r\n");
Properties p=System.getProperties();
for ( Object k : p.keySet()) {
bw.write(" " + k + "="+ p.get(k)+ "\r\n");
}
bw.write("\r\n");
}
finally {
bw.flush();
bw.close();
}
}
public static String[] run( String arg, boolean start) throws IOException {
Properties p=System.getProperties();
File runDirectory=new File(p.getProperty("user.dir"));
String[] newArgs=new String[3 + (arg.equals("1") || arg.equals("4") ? 1 : 0)];
newArgs[0]=p.getProperty("java.home") + File.separator + "bin"+ File.separator+ "java";
int add=0;
if ((arg.equals("1")) || (arg.equals("4"))) {
newArgs[1]="-Duser.home=\"" + p.getProperty("user.home") + "\"";
add=1;
}
newArgs[1 + add]="Main";
newArgs[2 + add]=arg;
if (start) {
ProcessBuilder pb=new ProcessBuilder(newArgs);
if ((arg.equals("2")) || (arg.equals("5"))) {
pb.environment().put("CUSTOM_USER_HOME",p.getProperty("user.home"));
}
pb.directory(runDirectory);
pb.start();
}
return newArgs;
}
public static void main( String[] args) throws IOException {
show(args);
if (args.length == 2) {
run(args[0],true);
}
}
END SOURCE;
CUSTOMER SUBMITTED;
Supply user;
home as;
environment variable;
and give;
priority to;
reading home;
in child;
String user_home=System.getenv("CUSTOM_USER_HOME");
{
user_home=p.getProperty("user.home");
}
ORSupply user;
home again;
the ProcessBuilder;
the path;
contains space( double quotes){
}
}
